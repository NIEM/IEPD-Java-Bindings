<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>jaxb-bindings</artifactId>

  <name>JAXB Bindings</name>
  <description>
    This project is responsible for running JAXB to generate the Java classes which will work with your IEPD.  It will
    also run XML Files end-to-end as tests, which are found in the IEPD.
  </description>

  <parent>
    <groupId>org.gtri.niem</groupId>
    <artifactId>java-bindings-reactor</artifactId>
    <version>0.3-SNAPSHOT</version>
  </parent>

  <build>
    <plugins>
      <!-- using jaxb plugin to generate java classes from xsd files -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>xjc</id>
            <goals><goal>xjc</goal></goals>
          </execution>
        </executions>
        <configuration>
          <verbose>true</verbose>
          <noPackageLevelAnnotations>true</noPackageLevelAnnotations>
          <clearOutputDir>true</clearOutputDir>
          <sources>
            <!-- Note: This directory is created by the prepare-iepd project, see that project for details -->
            <source>src/main/xsd</source>
          </sources>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals><goal>execute</goal></goals>
            <configuration>
              <source>
                log.info("Generating jaxb_config.properties file...");

                List packagePaths = []
                File jaxbGenSrcDir = new File(basedir, "./target/generated-sources/jaxb");
                jaxbGenSrcDir.eachFileRecurse( groovy.io.FileType.FILES ) { file ->
                  if( file.getName().equalsIgnoreCase("ObjectFactory.java") ){
                    File containingDir = file.getParentFile();
                    String packagePath = containingDir.canonicalPath.replace(jaxbGenSrcDir.canonicalPath+File.separator, "");
                    packagePath = packagePath.replace(File.separator, ".");
                    packagePaths.add(packagePath);
                  }
                }

                File jaxbPropertiesFile = new File(basedir, "./target/classes/jaxb_config.properties");
                if( !jaxbPropertiesFile.getParentFile().exists() ){
                  jaxbPropertiesFile.getParentFile().mkdirs();
                }
                jaxbPropertiesFile.withPrintWriter { writer ->
                  writer.println "#\n# This file was auto-generated by the GTRI JAXB Config Plugin, "+Calendar.getInstance().getTime()+"\n#\n\n"

                  writer.print '# Contains a list of all the JAXB related packages generated in this project.  Useful for creating a JAXBContext object.\n'
                  writer.print 'jaxb.packages='
                  for( int i = 0; i &lt; packagePaths.size(); i++ ){
                    String pName = packagePaths.get(i);
                    writer.print pName
                    if( i &lt; (packagePaths.size() - 1) )
                      writer.print ":"
                  }
                  writer.println "\n\n"
                }




              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>


  </build>

  <dependencies>
    <!-- JAXB should be included in the standard Java distribution -->

    <!-- Test Dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.github.benas/random-beans -->
    <dependency>
      <groupId>io.github.benas</groupId>
      <artifactId>random-beans</artifactId>
      <version>3.2.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>xml-randomizer</artifactId>
      <version>${project.version}</version>
    </dependency>

  </dependencies>

</project>
